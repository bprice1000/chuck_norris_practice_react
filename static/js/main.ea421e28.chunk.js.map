{"version":3,"sources":["Components/Joke.js","Components/CatSelector.js","images/chuck_norris.png","Components/Chuck.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Joke","jokes","className","categories","value","CatSelector","catChange","onChange","type","name","id","htmlFor","Chuck","src","chuck_norris","alt","App","onCatChange","event","setState","target","fetch","then","response","json","values","state","this","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea421e28.chunk.js","sourcesContent":["import React from 'react';\nimport './Joke.css'\n\nconst Joke = ({ jokes }) => {\n\n  return (\n    <div className='joke-container grow '>\n      <div className='front-text'>\n        <h2 className='joke'>So you want { jokes.categories } Chuck Norris jokes, eh?</h2>\n        <h6>Hover over me to lul</h6>\n      </div>\n      <div className='back-text'>\n       <p className=''>{ jokes.value }</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Joke\n","import React from 'react';\nimport './CatSelector.css'\n\nconst CatSelector = ({catChange}) => {\n  return (\n    <div className='catWrapper'>\n    <h4 className='tc '>You may select a specific type below...</h4>\n    <div className='catSelectors'>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='animal' id='animal'></input>\n      <label htmlFor=\"animal\">Animal</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='career' id='career'></input>\n      <label htmlFor=\"career\">Career</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='celebrity' id='celebrity'></input>\n      <label htmlFor=\"celebrity\">Celebrity</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='dev' id='dev'></input>\n      <label htmlFor=\"dev\">Dev</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='explicit' id='explicit'></input>\n      <label htmlFor=\"explicit\">Explicit</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='fashion' id='fashion'></input>\n      <label htmlFor=\"fashion\">Fashion</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='food' id='food'></input>\n      <label htmlFor=\"food\">Food</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='history' id='history'></input>\n      <label htmlFor=\"history\">History</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='money' id='money'></input>\n      <label htmlFor=\"money\">Money</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='movie' id='movie'></input>\n      <label htmlFor=\"movie\">Movie</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='music' id='music'></input>\n      <label htmlFor=\"music\">Music</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='political' id='political'></input>\n      <label htmlFor=\"political\">Political</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='religion' id='religion'></input>\n      <label htmlFor=\"religion\">Religion</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='science' id='science'></input>\n      <label htmlFor=\"science\">Science</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='sport' id='sport'></input>\n      <label htmlFor=\"sport\">Sport</label>\n    </div>\n    <div>\n      <input onChange={catChange} type='radio' name='cat' value='travel' id='travel'></input>\n      <label htmlFor=\"travel\">Travel</label>\n    </div>\n    </div>\n    </div>\n  )\n}\n\nexport default CatSelector;\n","export default __webpack_public_path__ + \"static/media/chuck_norris.984c2e9a.png\";","import React from 'react';\nimport chuck_norris from \"../images/chuck_norris.png\";\n\nconst Chuck = () => {\n\n  return (\n    <div className='mw5 mw7-ns center pa3 ph5-ns'>\n     <img src={ chuck_norris } alt=\"Logo\" />\n    </div>\n  )\n}\n\n\nexport default Chuck;\n","import React, { Component } from 'react';\nimport Joke from '../Components/Joke'\nimport CatSelector from '../Components/CatSelector'\nimport Chuck from '../Components/Chuck'\n\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      jokes: [],\n      categories: ''\n    }\n  }\n\n\n  componentDidMount() {\n    fetch('https://api.chucknorris.io/jokes/random')\n    .then(response => response.json())\n    .then(values => this.setState({ jokes: values}))\n  }\n\n\n  onCatChange = (event) => {\n    this.setState({categories: event.target.value})\n     fetch(\"https://api.chucknorris.io/jokes/random?category=\" + event.target.value)\n     .then(response => response.json())\n     .then(values => this.setState({jokes: values}))\n\n  }\n  render() {\n    const { jokes } = this.state;\n    if (this.state.jokes.length === 0) {\n      return <h1 className=\"h-100\">Loading</h1>\n  } else {\n  return (\n\n    <div>\n        <h1 className='titleHeading tc'>Chuck Norris Joke Generator</h1>\n    <CatSelector catChange={this.onCatChange} />\n    <Joke jokes={jokes}/>\n    <Chuck />\n    <p className='footer'>Made by Ben the Noob</p>\n    </div>\n\n  )\n  }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}